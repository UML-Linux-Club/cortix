<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration of Cortix -->

<cortixConfig version="0.1">

<!-- ****************************************************************************** -->
<!--                     CORTIX object starts here                                  -->

<!-- Cortix instantiation definition -->
<!-- NB: XML elements in this level must be unique across other configuration files if
         multiple Cortix objects are used in the cortix-main.py program.
         If this rule is not followed, there will be collision with file in/outputs;
         including results files and logging files.-->

 <name>cortix-dev1</name>

 <logger level="DEBUG">
  <fileHandler level="DEBUG"> </fileHandler>
  <consoleHandler level="INFO"> </consoleHandler>
 </logger>

 <workDir>/tmp/</workDir>

 <!-- ============================================================================= -->
 <!--                Simulation object starts here                                  -->

 <!-- Simulation definition -->
 <!-- NB: each simulation has only one application -->

 <simulation name="dev1">

  <logger level="DEBUG">
   <fileHandler level="DEBUG"> </fileHandler>
   <consoleHandler level="INFO"> </consoleHandler>
  </logger>

  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--                   Tasks objects start here                                   -->

  <!-- Simulation: tasks -->
  <!--NB: each task combines parameters for one named application connectivity-->
  <!--NB: each task name must match a network name below-->

  <task name="solo-pyplot" >
   <startTime unit="hour">0.0</startTime>
   <evolveTime unit="hour">17.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-fueldepot" >
   <evolveTime unit="hour">2.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-shear" >
   <evolveTime unit="hour">12.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-fuel-accum" >
   <evolveTime unit="hour">24.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-dissolverA">
   <evolveTime unit="hour">1.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-condenser">
   <evolveTime unit="hour">18.0</evolveTime> <!-- 18h max -->
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-tank">
   <evolveTime unit="hour">42.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-plume" >
   <evolveTime unit="hour">12.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-cooltower" >
   <evolveTime unit="hour">1.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="solo-solventxtract" >
   <evolveTime unit="hour">14.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="fueldepot-chopper">
<!--   <evolveTime unit="hour">108.0</evolveTime> --> <!-- all assemblies -->
<!--   <evolveTime unit="hour">36.0</evolveTime> --> <!-- 1 assembly -->
   <evolveTime unit="hour">108.0</evolveTime> 
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="fueldepot-chopper-storage">
<!--   <evolveTime unit="hour">24.0</evolveTime> -->
   <evolveTime unit="hour">12.0</evolveTime> 
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="fueldepot-chopper-dissolver">
<!--   <evolveTime unit="hour">28.0</evolveTime> -->
<!--   <evolveTime unit="hour">42.0</evolveTime>  -->
   <evolveTime unit="hour">18.0</evolveTime>  
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="fueldepot-chopper-dissolver-tank">
<!--   <evolveTime unit="hour">24.0</evolveTime> -->
<!--   <evolveTime unit="hour">17.0</evolveTime>  one batch -->
   <evolveTime unit="hour">42.0</evolveTime> 
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="tank-feedprep">
   <evolveTime unit="hour">42.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="fueldepot-chopper-dissolver-tank-feedprep">
<!--   <evolveTime unit="hour">28.0</evolveTime> -->
<!--   <evolveTime unit="hour">16.0</evolveTime> -->
   <evolveTime unit="hour">42.0</evolveTime> 
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="fueldepot-chopper-dissolver-tank-feedprep-solventxtract">
<!--   <evolveTime unit="hour">28.0</evolveTime> -->
   <evolveTime unit="hour">14.0</evolveTime> 
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="shear-dissolve-offgas">
   <evolveTime unit="hour">22.0</evolveTime> 
<!-- <evolveTime unit="hour">5.0</evolveTime> -->
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="shear-dissolve">
   <evolveTime unit="hour">24.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <task name="shear-double-dissolve-single-condense">
   <evolveTime unit="hour">14.0</evolveTime>
   <timeStep unit="minute">1.0</timeStep>
   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>
  </task>

  <!--                   Tasks objects end here                                     -->
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <!-- ############################################################################ -->
  <!--                   Application object starts here                             -->

  <!-- Simulation: application -->
  <!-- NB: each simulation has only one application -->

  <application name="dev1">

   <moduleLibrary name='head-lib'>
    <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
    </parentDir>
   </moduleLibrary>

   <logger level="DEBUG">
    <fileHandler level="DEBUG"> </fileHandler>
    <consoleHandler level="INFO"> </consoleHandler>
   </logger>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <!--                  Modules objects starts here                                -->
   <!-- Application: modules set -->

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="fueldepot" type="native">
    <library name='headend-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>fueldepot.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="directory" multiplicity="1">westinghouse-14x14</port>
    <port type="use"     mode="directory" multiplicity="1">fuel-input</port>
    <port type="use"     mode="file.xml"  multiplicity="1">go-signal</port>
    <port type="provide" mode="file.shlv" multiplicity="1">fuel-bundle</port>
    <port type="output"  mode="file.any"  multiplicity="1">persistent-output</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="chopper" type="native">
    <library name='headend-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>chopper.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="use"     mode="file.shlv" multiplicity="1">fuel-bundle</port>
    <port type="use"     mode="file.xml"  multiplicity="1">go-signal</port>
    <port type="provide" mode="file.shlv" multiplicity="1">fuel-segments</port>
    <port type="provide" mode="file.xml"  multiplicity="1">state</port>
    <port type="provide" mode="file.xml"  multiplicity="1">status-signal</port>
    <port type="output"  mode="file.any"  multiplicity="1">persistent-output</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="oldchopper" type="native">
    <library name='vfda-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>oldchopper.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"     mode="file.xml" multiplicity="1">Fuel_Solid</port>
    <port type="input"     mode="file.xml" multiplicity="1">Gas_Release</port>
    <port type="input"     mode="file.xml" multiplicity="1">Particulate</port>
    <port type="use"       mode="file.xml" multiplicity="1">solids-input</port>
    <port type="use"       mode="file.xml" multiplicity="1">gas-input</port>
    <port type="use"       mode="file.xml" multiplicity="1">fines-input</port>
    <port type="provide"   mode="file.xml" multiplicity="1">solids</port>
    <port type="provide"   mode="file.xml" multiplicity="1">off-gas</port>
    <port type="provide"   mode="file.xml" multiplicity="1">fines</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="storage" type="native">
    <inputFileName>storage.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.xml" multiplicity="1">chopper-data-test</port>
    <port type="input"   mode="file.xml" multiplicity="1">dissolver-data-test</port>
    <port type="use"     mode="file.xml" multiplicity="1">fuel-segments</port>
    <port type="use"     mode="file.xml" multiplicity="1">withdrawal-request</port>
    <port type="provide" mode="file.xml" multiplicity="1">status-signal</port>
    <port type="provide" mode="file.xml" multiplicity="1">fuel-segments-on-demand</port>
    <port type="provide" mode="file.xml" multiplicity="1">off-gas</port>
    <port type="provide" mode="file.xml" multiplicity="1">state</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="dissolverA" type="native">
    <library name='vfda-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>dissolver.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.xml" multiplicity="1">dissolver-solo-input</port>
    <port type="use"     mode="file.xml" multiplicity="1">solids-input</port>
    <port type="use"     mode="file.xml" multiplicity="1">solids</port>
    <port type="use"     mode="file.xml" multiplicity="1">condensate</port>
    <port type="provide" mode="file.xml" multiplicity="1">signal</port>
    <port type="provide" mode="file.xml" multiplicity="1">state</port>
    <port type="provide" mode="file.xml" multiplicity="1">vapor</port>
    <port type="provide" mode="file.xml" multiplicity="1">product</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
<!--      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing  -->
   <module name="dissolver" type="native">
    <library name='headend-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing  
     </parentDir>
    </library>
    <inputFileName>dissolver.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.xml"  multiplicity="1">dissolver-solo-input</port>
    <port type="use"     mode="file.xml"  multiplicity="1">solids-input</port>
    <port type="use"     mode="file.xml"  multiplicity="1">go-signal</port>
    <port type="use"     mode="file.xml"  multiplicity="1">fuel-segments</port>
    <port type="use"     mode="file.xml"  multiplicity="1">condensate</port>
    <port type="provide" mode="file.xml"  multiplicity="1">status-signal</port>
    <port type="provide" mode="file.xml"  multiplicity="1">state</port>
    <port type="provide" mode="file.shlv" multiplicity="1">product</port>
    <port type="provide" mode="file.xml"  multiplicity="1">product-plot</port>
    <port type="provide" mode="file.shlv" multiplicity="1">vapor</port>
    <port type="provide" mode="file.dat"  multiplicity="1">vapor-table</port>
    <port type="output"  mode="file.any"  multiplicity="1">persistent-output</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="tank" type="native">
    <inputFileName>tank.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.shlv" multiplicity="1">tank-solo-input</port>
    <port type="use"     mode="file.shlv" multiplicity="1">liquid</port>
    <port type="use"     mode="file.xml"  multiplicity="1">withdrawal-request</port>
    <port type="use"     mode="file.xml"  multiplicity="1">go-signal</port>
    <port type="provide" mode="file.xml"  multiplicity="1">status-signal</port>
    <port type="provide" mode="file.xml"  multiplicity="1">liquid-on-demand</port>
    <port type="provide" mode="file.shlv" multiplicity="1">product</port>
    <port type="provide" mode="file.xml"  multiplicity="1">off-gas</port>
    <port type="provide" mode="file.xml"  multiplicity="1">state</port>
    <port type="output"  mode="file.any"  multiplicity="1">persistent-output</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="feedprep" type="native">
    <inputFileName>feedprep.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="use"     mode="file.shlv" multiplicity="1">liquid</port>
    <port type="use"     mode="file.xml"  multiplicity="1">withdrawal-request</port>
    <port type="use"     mode="file.xml"  multiplicity="1">go-signal</port>
    <port type="provide" mode="file.xml"  multiplicity="1">status-signal</port>
    <port type="provide" mode="file.xml"  multiplicity="1">liquid-on-demand</port>
    <port type="provide" mode="file.shlv" multiplicity="1">product</port>
    <port type="provide" mode="file.xml"  multiplicity="1">product-plot</port>
    <port type="provide" mode="file.xml"  multiplicity="1">off-gas</port>
    <port type="provide" mode="file.xml"  multiplicity="1">state</port>
    <port type="output"  mode="file.any"  multiplicity="1">persistent-output</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="solventxtract" type="native">
    <inputFileName>solventxtract.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.shlv" multiplicity="1">solventxtract-solo-input</port>
    <port type="use"     mode="file.shlv" multiplicity="1">liquid-input</port>
    <port type="use"     mode="file.shlv" multiplicity="1">liquid</port>
    <port type="use"     mode="file.xml"  multiplicity="1">go-signal</port>
    <port type="provide" mode="file.xml"  multiplicity="1">status-signal</port>
    <port type="provide" mode="file.shlv" multiplicity="1">aqueous</port>
    <port type="provide" mode="file.shlv" multiplicity="1">organic</port>
    <port type="provide" mode="file.xml"  multiplicity="1">off-gas</port>
    <port type="provide" mode="file.xml"  multiplicity="1">state</port>
    <port type="provide" mode="file.xml"  multiplicity="1">product-plot</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="condenser" type="native">
    <library name='headend-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>condenser.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.shlv" multiplicity="1">condenser-solo-input</port>
    <port type="use"     mode="file.shlv" multiplicity="1">vapor</port>
    <port type="provide" mode="file.shlv" multiplicity="1">off-gas</port>
    <port type="provide" mode="file.shlv" multiplicity="1">condensate</port>
    <port type="provide" mode="file.xml"  multiplicity="1">hot-water</port>
    <port type="provide" mode="file.xml"  multiplicity="1">state</port>
    <port type="output"  mode="file.any"  multiplicity="1">persistent-output</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="scrubber" type="native">
    <inputFileName>scrubber.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="use"     mode="file.xml" multiplicity="1">inflow-gas</port>
    <port type="provide" mode="file.xml" multiplicity="1">off-gas</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="filter" type="native">
    <inputFileName>filter.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="use"     mode="file.xml" multiplicity="1">inflow-gas</port>
    <port type="provide" mode="file.xml" multiplicity="1">off-gas</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="offgas" type="native">
    <inputFileName>offgas.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="use"     mode="file.xml" multiplicity="1">inflow-gas</port>
    <port type="provide" mode="file.xml" multiplicity="1">off-gas</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="plume" type="wrapped">
    <library name='srnl-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>plume.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <executableName>pfpl</executableName>
    <executablePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/facility_pfpl/</executablePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.xml" multiplicity="1">plume-solo-input</port>
    <port type="use"     mode="file.xml" multiplicity="1">offgas-input</port>
    <port type="use"     mode="file.xml" multiplicity="1">offgas</port>
    <port type="provide" mode="file.xml" multiplicity="1">puff</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="cooltower" type="wrapped">
    <library name='srnl-lib'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>cooltower.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <executableName>cttool.x</executableName>
    <executablePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/srnl-lib/cooltower/bin/</executablePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input"   mode="file.xml" multiplicity="1">cooltower-solo-input</port>
    <port type="use"     mode="file.xml" multiplicity="1">water-input</port>
    <port type="use"     mode="file.xml" multiplicity="1">hot-water</port>
    <port type="provide" mode="file.xml" multiplicity="1">cold-water</port>
   </module>

   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->
   <module name="viz.pyplot" type="native">
    <library name='cortix'>
     <parentDir>
      /home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing 
     </parentDir>
    </library>
    <inputFileName>pyplot.input</inputFileName>
    <inputFilePath>/home/dealmeida/mac-fvu/gentoo-home/work/codes/reprocessing/cortix/input/</inputFilePath>
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Ports have fourt types: 1) use, 2) provide, 3) input 4) output -->
    <!-- The *input*, and *output* types allows for module self-connection; see network section  -->
    <port type="input" mode="file.xml" multiplicity="1">pyplot-solo-input</port>
    <port type="use"   mode="file.xml" multiplicity="1">time-sequence-input</port>
    <port type="use"   mode="file.xml" multiplicity="1">time-sequence</port>
    <port type="use"   mode="file.xml" multiplicity="1">time-tables</port>
   </module>


   <!--                  Modules objects end here                                   -->
   <!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -->

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <!--                  Network objects start here                                 -->

   <!-- Application: networks -->
   <!-- NB: each network has its own task definition above; with the same name -->
   <!-- NB: the connect tag is ordered: *from* is the receiver; *to* is the provider-->
   <!-- NB: port labels are the "names" of the ports; "not" a file name necessarily-->
   <!-- NB: module labels must be composed with a "slot" number, say "name:x"-->

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-pyplot">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence-input" toModuleSlot="viz.pyplot:0" toPort="pyplot-solo-input"/> 
   </network>


   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-fueldepot">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="persistent-output" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-shear">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="oldchopper:0" fromPort="solids-input" toModuleSlot="oldchopper:0" toPort="Fuel_Solid"/> 
    <connect fromModuleSlot="oldchopper:0" fromPort="gas-input" toModuleSlot="oldchopper:0" toPort="Gas_Release"/> 
    <connect fromModuleSlot="oldchopper:0" fromPort="fines-input" toModuleSlot="oldchopper:0" toPort="Particulate"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="oldchopper:0" toPort="off-gas"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-fuel-accum">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="storage:0" fromPort="solids" toModuleSlot="storage:0" toPort="chopper-data-test"/> 
    <connect fromModuleSlot="storage:0" fromPort="withdrawal-request" toModuleSlot="storage:0" toPort="dissolver-data-test"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-dissolverA">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="dissolverA:0" fromPort="solids-input" toModuleSlot="dissolverA:0" toPort="dissolver-solo-input"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="vapor"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-condenser">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="condenser:0" fromPort="vapor" toModuleSlot="condenser:0" toPort="condenser-solo-input"/> 
    <connect fromModuleSlot="condenser:0" fromPort="persistent-output" toModuleSlot="condenser:0" toPort="condensate"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="state"/>  
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-tank">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="tank:0" fromPort="liquid" toModuleSlot="tank:0" toPort="tank-solo-input"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="tank:0" toPort="state"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-cooltower">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="cooltower:0" fromPort="water-input" toModuleSlot="cooltower:0" toPort="cooltower-solo-input"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="cooltower:0" toPort="cold-water"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-plume">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="plume:0" fromPort="offgas-input" toModuleSlot="plume:0" toPort="plume-solo-input"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-tables" toModuleSlot="plume:0" toPort="puff"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="solo-solventxtract">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="solventxtract:0" fromPort="liquid-input" toModuleSlot="solventxtract:0" toPort="solventxtract-solo-input"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="solventxtract:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="solventxtract:0" toPort="state"/> 
<!--    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="solventxtract:0" toPort="product-plot"/> -->
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="fueldepot-chopper">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="go-signal" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fuel-bundle" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
<!--
    <connect fromModuleSlot="chopper:0" fromPort="persistent-output" toModuleSlot="chopper:0" toPort="fuel-segments"/> 
-->
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="status-signal"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="fueldepot-chopper-storage">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="go-signal" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fuel-bundle" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
    <connect fromModuleSlot="chopper:0" fromPort="go-signal" toModuleSlot="storage:0" toPort="status-signal"/> 
    <connect fromModuleSlot="storage:0" fromPort="fuel-segments" toModuleSlot="chopper:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="storage:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="storage:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="storage:0" toPort="status-signal"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="fueldepot-chopper-dissolver">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="go-signal" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fuel-bundle" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
    <connect fromModuleSlot="chopper:0" fromPort="go-signal" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="fuel-segments" toModuleSlot="chopper:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="vapor-table"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="vapor"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="product"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="state"/> 
<!--    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="product-plot"/>  -->
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="tank-feedprep">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is t type-->
    <connect fromModuleSlot="tank:0" fromPort="liquid" toModuleSlot="tank:0" toPort="tank-solo-input"/> 
    <connect fromModuleSlot="tank:0" fromPort="go-signal" toModuleSlot="feedprep:0" toPort="status-signal"/> 
    <connect fromModuleSlot="feedprep:0" fromPort="liquid" toModuleSlot="tank:0" toPort="product"/> 
    <connect fromModuleSlot="feedprep:0" fromPort="persistent-output" toModuleSlot="feedprep:0" toPort="product"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="tank:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="tank:0" toPort="status-signal"/>  
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="status-signal"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="fueldepot-chopper-dissolver-tank">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="go-signal" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fuel-bundle" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
    <connect fromModuleSlot="chopper:0" fromPort="go-signal" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="fuel-segments" toModuleSlot="chopper:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="vapor-table"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="vapor"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="go-signal" toModuleSlot="tank:0" toPort="status-signal"/> 
    <connect fromModuleSlot="tank:0" fromPort="liquid" toModuleSlot="dissolver:0" toPort="product"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="state"/> 
<!--    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="product-plot"/>  -->
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="tank:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="tank:0" toPort="status-signal"/>  
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="fueldepot-chopper-dissolver-tank-feedprep">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is t type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="go-signal" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fuel-bundle" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
    <connect fromModuleSlot="chopper:0" fromPort="go-signal" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="fuel-segments" toModuleSlot="chopper:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="vapor-table"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="persistent-output" toModuleSlot="dissolver:0" toPort="vapor"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="go-signal" toModuleSlot="tank:0" toPort="status-signal"/> 
    <connect fromModuleSlot="tank:0" fromPort="liquid" toModuleSlot="dissolver:0" toPort="product"/> 
    <connect fromModuleSlot="tank:0" fromPort="go-signal" toModuleSlot="feedprep:0" toPort="status-signal"/> 
    <connect fromModuleSlot="feedprep:0" fromPort="liquid" toModuleSlot="tank:0" toPort="product"/> 
    <connect fromModuleSlot="feedprep:0" fromPort="persistent-output" toModuleSlot="feedprep:0" toPort="product"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="tank:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="tank:0" toPort="status-signal"/>  
    <connect fromModuleSlot="viz.pyplot:3" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="state"/> 
<!--    <connect fromModuleSlot="viz.pyplot:3" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="product-plot"/> -->
    <connect fromModuleSlot="viz.pyplot:3" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="status-signal"/>  
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="fueldepot-chopper-dissolver-tank-feedprep-solventxtract">
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="fueldepot:0" fromPort="fuel-input" toModuleSlot="fueldepot:0" toPort="westinghouse-14x14"/> 
    <connect fromModuleSlot="fueldepot:0" fromPort="go-signal" toModuleSlot="chopper:0" toPort="status-signal"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fuel-bundle" toModuleSlot="fueldepot:0" toPort="fuel-bundle"/> 
    <connect fromModuleSlot="chopper:0" fromPort="go-signal" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="fuel-segments" toModuleSlot="chopper:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="dissolver:0" fromPort="go-signal" toModuleSlot="tank:0" toPort="status-signal"/> 
    <connect fromModuleSlot="tank:0" fromPort="liquid" toModuleSlot="dissolver:0" toPort="product"/> 
    <connect fromModuleSlot="tank:0" fromPort="go-signal" toModuleSlot="feedprep:0" toPort="status-signal"/> 
    <connect fromModuleSlot="feedprep:0" fromPort="liquid" toModuleSlot="tank:0" toPort="product"/> 
    <connect fromModuleSlot="feedprep:0" fromPort="go-signal" toModuleSlot="solventxtract:0" toPort="status-signal"/> 
    <connect fromModuleSlot="solventxtract:0" fromPort="liquid" toModuleSlot="feedprep:0" toPort="product"/> 
<!--    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="status-signal"/> -->
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="status-signal"/> 
    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="state"/> 
<!--    <connect fromModuleSlot="viz.pyplot:1" fromPort="time-sequence" toModuleSlot="dissolver:0" toPort="product-plot"/>  -->
<!--    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="tank:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="tank:0" toPort="status-signal"/>  -->
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:2" fromPort="time-sequence" toModuleSlot="feedprep:0" toPort="status-signal"/>  
    <connect fromModuleSlot="viz.pyplot:3" fromPort="time-sequence" toModuleSlot="solventxtract:0" toPort="status-signal"/>  
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="shear-dissolve-offgas">
   <!-- Network name must match a task name-->
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="oldchopper:0" fromPort="solids-input" toModuleSlot="oldchopper:0" toPort="Fuel_Solid"/> 
    <connect fromModuleSlot="oldchopper:0" fromPort="gas-input" toModuleSlot="oldchopper:0" toPort="Gas_Release"/> 
    <connect fromModuleSlot="oldchopper:0" fromPort="fines-input" toModuleSlot="oldchopper:0" toPort="Particulate"/> 
    <connect fromModuleSlot="storage:0" fromPort="solids" toModuleSlot="oldchopper:0" toPort="solids"/> 
    <connect fromModuleSlot="storage:0" fromPort="withdrawal-request" toModuleSlot="dissolverA:0" toPort="signal"/> 
    <connect fromModuleSlot="dissolverA:0" fromPort="solids" toModuleSlot="storage:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="condenser:0" fromPort="vapor" toModuleSlot="dissolverA:0" toPort="vapor"/> 
    <connect fromModuleSlot="dissolverA:0" fromPort="condensate" toModuleSlot="condenser:0" toPort="condensate"/> 
    <connect fromModuleSlot="scrubber:0" fromPort="inflow-gas" toModuleSlot="oldchopper:0" toPort="off-gas"/> 
    <connect fromModuleSlot="scrubber:0" fromPort="inflow-gas" toModuleSlot="storage:0" toPort="off-gas"/> 
    <connect fromModuleSlot="scrubber:0" fromPort="inflow-gas" toModuleSlot="condenser:0" toPort="off-gas"/> 
    <connect fromModuleSlot="filter:0" fromPort="inflow-gas" toModuleSlot="scrubber:0" toPort="off-gas"/> 
    <connect fromModuleSlot="offgas:0" fromPort="inflow-gas" toModuleSlot="filter:0" toPort="off-gas"/> 
<!--
    <connect fromModuleSlot="plume" fromPort="off-gas" toModuleSlot="offgas" toPort="off-gas"/> 
-->
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="oldchopper:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="storage:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="storage:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="signal"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="vapor"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="condensate"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="scrubber:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="filter:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="offgas:0" toPort="off-gas"/> 
<!--
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-tables" toModuleSlot="plume:0" toPort="time-puff"/> 
-->
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="shear-dissolve">
   <!-- Network name must match a task name-->
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="chopper:0" fromPort="solids-input" toModuleSlot="chopper:0" toPort="Fuel_Solid"/> 
    <connect fromModuleSlot="chopper:0" fromPort="gas-input" toModuleSlot="chopper:0" toPort="Gas_Release"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fines-input" toModuleSlot="chopper:0" toPort="Particulate"/> 
    <connect fromModuleSlot="storage:0" fromPort="solids" toModuleSlot="chopper:0" toPort="solids"/> 
    <connect fromModuleSlot="storage:0" fromPort="withdrawal-request" toModuleSlot="dissolverA:0" toPort="signal"/> 
    <connect fromModuleSlot="dissolverA:0" fromPort="solids" toModuleSlot="storage:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="condenser:0" fromPort="vapor" toModuleSlot="dissolverA:0" toPort="vapor"/> 
    <connect fromModuleSlot="dissolverA:0" fromPort="condensate" toModuleSlot="condenser:0" toPort="condensate"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="storage:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="storage:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="signal"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="vapor"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="condensate"/> 
   </network>

   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->
   <network name="shear-double-dissolve-single-condense">
   <!-- Network name must match a task name-->
    <logger level="DEBUG">
     <fileHandler level="DEBUG"> </fileHandler>
     <consoleHandler level="INFO"> </consoleHandler>
    </logger>
    <!-- Modules need to be given a slot number; use a colon after the name followed by an integer-->
    <!-- For self-connection of a module: fromPort is use type; toPort is input type-->
    <!-- For self-connection of a module: fromPort is output type; toPort is provide type-->
    <connect fromModuleSlot="chopper:0" fromPort="solids-input" toModuleSlot="chopper:0" toPort="Fuel_Solid"/> 
    <connect fromModuleSlot="chopper:0" fromPort="gas-input" toModuleSlot="chopper:0" toPort="Gas_Release"/> 
    <connect fromModuleSlot="chopper:0" fromPort="fines-input" toModuleSlot="chopper:0" toPort="Particulate"/> 
    <connect fromModuleSlot="storage:0" fromPort="solids" toModuleSlot="chopper:0" toPort="solids"/> 
    <connect fromModuleSlot="storage:0" fromPort="withdrawal-request" toModuleSlot="dissolverA:0" toPort="signal"/> 
    <connect fromModuleSlot="storage:0" fromPort="withdrawal-request" toModuleSlot="dissolverA:1" toPort="signal"/> 
    <connect fromModuleSlot="dissolverA:0" fromPort="solids" toModuleSlot="storage:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="dissolverA:1" fromPort="solids" toModuleSlot="storage:0" toPort="fuel-segments"/> 
    <connect fromModuleSlot="condenser:0" fromPort="vapor" toModuleSlot="dissolverA:0" toPort="vapor"/> 
    <connect fromModuleSlot="dissolverA:0" fromPort="condensate" toModuleSlot="condenser:0" toPort="condensate"/> 
    <connect fromModuleSlot="condenser:0" fromPort="vapor" toModuleSlot="dissolverA:1" toPort="vapor"/> 
    <connect fromModuleSlot="dissolverA:1" fromPort="condensate" toModuleSlot="condenser:0" toPort="condensate"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="chopper:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="storage:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="storage:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="signal"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="vapor"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:0" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:1" toPort="signal"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:1" toPort="vapor"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="dissolverA:1" toPort="state"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="off-gas"/> 
    <connect fromModuleSlot="viz.pyplot:0" fromPort="time-sequence" toModuleSlot="condenser:0" toPort="condensate"/> 
   </network>

   <!--                  Network objects end here                                   -->
   <!-- o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o -->

  <!--                   Application object ends here                               -->
  <!-- ############################################################################ -->
  </application>

 <!--                Simulation object ends here                                    -->
 <!-- ============================================================================= -->
 </simulation>

</cortixConfig>
